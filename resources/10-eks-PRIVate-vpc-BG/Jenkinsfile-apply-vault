pipeline {

    parameters {
        booleanParam(name: 'autoApprove', defaultValue: false, description: 'Automatically run apply after generating plan?')
    } 
   agent  any
    stages {
        stage('checkout') {
            steps {
                script{
                        dir("terraform")
                        {
                            git "https://github.com/vidalgithub/TERRAFORM_DEMOS.git"
                        }
                }
            }
        }
        stage('Plan') {
            steps {
                withVault(configuration: [disableChildPoliciesOverride: false, timeout: 60, vaultCredentialId: 'vaultCred', vaultUrl: 'http://vault.beitcloud.com:8200'], vaultSecrets: [[path: 'mycreds/aws-creds/aj', secretValues: [[vaultKey: 'AWS_ACCESS_KEY_ID'], [vaultKey: 'AWS_SECRET_ACCESS_KEY']]]] {
                   sh 'pwd;cd terraform/resources/10-eks-PRIVate-vpc-BG ; terraform init'
                   sh "pwd;cd terraform/resources/10-eks-PRIVate-vpc-BG ; terraform plan -out tfplan"
                   sh 'pwd;cd terraform/resources/10-eks-PRIVate-vpc-BG ; terraform show -no-color tfplan > tfplan.txt'
                }
            }
        }
        stage('Approval') {
           when {
               not {
                   equals expected: true, actual: params.autoApprove
               }
           }

           steps {
               script {
                    def plan = readFile 'terraform/tfplan.txt'
                    input message: "Do you want to apply the plan?",
                    parameters: [text(name: 'Plan', description: 'Please review the plan', defaultValue: plan)]
               }
           }
       }

        stage('Apply') {
            steps {
                withVault(configuration: [disableChildPoliciesOverride: false, timeout: 60, vaultCredentialId: 'vaultCred', vaultUrl: 'http://vault.beitcloud.com:8200'], vaultSecrets: [[path: 'mycreds/aws-creds/aj', secretValues: [[vaultKey: 'AWS_ACCESS_KEY_ID'], [vaultKey: 'AWS_SECRET_ACCESS_KEY']]]] {
                   sh "pwd;cd terraform/resources/10-eks-PRIVate-vpc-BG ; terraform apply -input=false tfplan"
                   sh "terraform version"
                }
            }
        }
    }

}
